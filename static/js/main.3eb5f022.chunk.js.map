{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","Plot","Title","Poster","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","imdbID","defaultTypes","getMovies","name","fetch","then","response","json","FindMovie","setMovie","useState","value","setInput","preview","setPreview","error","setError","isNormalPreview","Object","keys","length","htmlFor","type","id","placeholder","classNames","onChange","event","target","onClick","a","movieFromServer","Response","array","some","elem","App","data","ReactDOM","render","document","getElementById"],"mappings":"2wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QACAC,EALuB,EAKvBA,KACAC,EANuB,EAMvBA,MACAC,EAPuB,EAOvBA,OAPuB,OASvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKN,GAAUI,EACfG,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcP,GAASK,KAIxC,yBAAKE,UAAU,WACZN,GAAeG,EAChB,6BACA,uBAAGM,KAAMP,GAAT,aAgBRJ,EAAUY,aAAe,CACvBX,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTC,KAAM,GACNC,MAAO,GACPC,OAAQ,ICzDH,IAAMM,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAUF,EAAMG,QAAYH,SAcxDH,EAAWO,aAAe,CACxBF,OAAQ,GACRC,OAAQ,I,yDCnBV,IAAME,EAAY,SAAAC,GAAI,OCNGN,EDMUM,ECL1BC,MAAM,GAAD,OAHD,8CAGC,OAAcP,IACvBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFxB,IAAkBV,GDQZW,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACfC,mBAAS,IADM,mBAClCC,EADkC,KAC3BC,EAD2B,OAEXF,mBAAS,IAFE,mBAElCG,EAFkC,KAEzBC,EAFyB,OAGfJ,mBAAS,MAHM,mBAGlCK,EAHkC,KAG3BC,EAH2B,KAInCC,IAAoBC,OAAOC,KAAKN,GAASO,OAE/C,OACE,oCACE,0BAAM/B,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQgC,QAAQ,eAAjC,eAIA,yBAAKhC,UAAU,WACb,2BACEiC,KAAK,OACLC,GAAG,cACHZ,MAAOA,EACPa,YAAY,0BACZnC,UAAWoC,IAAW,QAAS,CAAE,YAAaV,IAC9CW,SAAU,SAACC,GACTf,EAASe,EAAMC,OAAOjB,WAK3BI,GACC,uBAAG1B,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,kBACVwC,QAAO,sBAAE,4BAAAC,EAAA,sEACuB5B,EAAUS,GADjC,UAG0B,WAF3BoB,EADC,QAGaC,SAHb,uBAILhB,GAAS,GAJJ,0BASPA,EAAS,MACTF,EAAWiB,GAVJ,4CAHX,iBAoBF,yBAAK1C,UAAU,WACb,4BACEiC,KAAK,SACLjC,UAAU,oBACVwC,QAAS,WACHZ,IACFR,GAAS,SAACwB,GAKR,OAJqBA,EAAMC,MACzB,SAAAC,GAAI,OAAKA,EAAKpC,QAAUoC,EAAKnC,UAAYa,EAAQb,UAI1CiC,EAGH,GAAN,mBAAWA,GAAX,CAAkBpB,OAEpBC,EAAW,OAhBjB,sBA0BN,yBAAKzB,UAAU,aACZ4B,GACC,oCACE,wBAAI5B,UAAU,SAAd,WACA,kBAAC,EAAcwB,O,OE3FduB,EAAM,WAAO,IAAD,EACI1B,mBAAS2B,GADb,mBAChB1C,EADgB,KACRc,EADQ,KAGvB,OACE,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEoB,SAAUA,OCXpB6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3eb5f022.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n  Plot,\n  Title,\n  Poster,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl || Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title || Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description || Plot}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string,\n  imdbUrl: PropTypes.string,\n  Plot: PropTypes.string,\n  Title: PropTypes.string,\n  Poster: PropTypes.string,\n};\n\nMovieCard.defaultProps = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  Plot: '',\n  Title: '',\n  Poster: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId || movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string,\n      imdbID: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n\nMoviesList.defaultTypes = {\n  imdbId: '',\n  imdbID: '',\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nconst getMovies = name => getMovie(name);\n\nexport const FindMovie = ({ setMovie }) => {\n  const [value, setInput] = useState('');\n  const [preview, setPreview] = useState({});\n  const [error, setError] = useState(null);\n  const isNormalPreview = !!Object.keys(preview).length;\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={value}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              onChange={(event) => {\n                setInput(event.target.value);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={async() => {\n                const movieFromServer = await getMovies(value);\n\n                if (movieFromServer.Response === 'False') {\n                  setError(true);\n\n                  return;\n                }\n\n                setError(null);\n                setPreview(movieFromServer);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (isNormalPreview) {\n                  setMovie((array) => {\n                    const hasThisMovie = array.some(\n                      elem => (elem.imdbId || elem.imdbID) === preview.imdbID,\n                    );\n\n                    if (hasThisMovie) {\n                      return array;\n                    }\n\n                    return [...array, preview];\n                  });\n                  setPreview({});\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {isNormalPreview && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...preview} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  setMovie: PropTypes.func.isRequired,\n};\n","const API_URL = `http://www.omdbapi.com/?apikey=cc4d4024&t=`;\n\nexport function getMovie(movie) {\n  return fetch(`${API_URL}${movie}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovie] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovie={setMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}